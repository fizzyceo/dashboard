import Head from 'next/head';
import { useEffect } from 'react';
import supabase from '../utils/SupabaseCli';
import { useState } from 'react';
import { useRouter } from 'next/router';


export default function Home() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');
  const [userId, setUserId] = useState('');
  const [loading,setLoading] = useState(true)
  useEffect(() => {
    const getuser = async () => {
      const { data, error } = await supabase.auth.getUser();
      if (error) {
        setLoading(false)

        throw error.message;
      
      }
      else {
        const checkRole = await supabase.from("user").select("admin").eq("email",data.user.email)
        if(checkRole.admin){
            router.push('/Dashboard');
        }else {
          router.push('/Client');
        }
        setLoading(false)
      }

      
      
    };
    getuser();
    
  }, []);
  const router = useRouter();

  const checkLogin2 = async () => {
    const { data, error } = await supabase.auth.signInWithPassword({
      email: email,
      password: password,
    });
    console.log(data);
    if (error) {
      setError(error.message);
      setTimeout(() => {
        setError('');
      }, 3000);
    } else {
      console.log(data);
      if (data.session) {
        setUserId(data.user.id);
        //
        const check_role = await supabase.from("user").select("admin").eq("email", data.user.email)

        console.log(check_role.data[0].admin);
        if(check_role.data[0].admin){
          router.push('/Dashboard');
        }else{
          router.push('/Client');
        }
        
      }
    }
  };
  return(
 
 <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
    {!loading ?(
      <main className="  bg-slate-900 w-screen min-h-screen">
      <h1 className="clashdisplay text-white text-center py-6 text-3xl ">Login Page</h1>

      <section className="max-w-[475px] rounded-md mt-16 p-4 technor  bg-slate-500  h-fit mx-auto flex justify-center  flex-col gap-5 items-center">
        <h1 className="text-white font-semibold text-xl">
          Insert Credentials
        </h1>
        <h2 className="text-red-400">{error} </h2>

        <div className="w-full">
          <h3 className="text-white my-1">Email:</h3>
          <input
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            type="text"
            placeholder="Your Email"
            className="rounded-md w-full py-2 px-2 outline-none focus:border-b-purple-900 focus:border-b-2"
          />
        </div>
        <div className="w-full">
          <h3 className="text-white my-1">Password:</h3>
          <input
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            type="password"
            placeholder="Your password"
            className="rounded-md  px-2  w-full py-2 outline-none focus:border-b-purple-900 focus:border-b-2"
          />
        </div>
        <button
          onClick={checkLogin2}
          className="w-full py-2 my-3 bg-black text-white"
        >
          Login
        </button>
        <a className="text-white hover:underline" href="/SignUp">
          vous etes un officier sans compte ?{' '}
        </a>
      </section>
    </main>
    ):(
      <div className='w-screen h-screen flex items-center justify-center '>
        <div className='bg-green-400 rounded-full w-7 h-7 animate-pulse'></div>
      </div>
    )}
      
    </>
  );

}
